apply plugin: 'com.android.application'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
}

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        debug {
            storeFile file('./debug.keystore')
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            android.applicationVariants.all
                    { variant ->
                        variant.outputs.each { output ->
                            output.outputFile = new File(rootProject.ext.outputFilePath,
                                    project.archivesBaseName + "-" + project.versionName + ".apk");
                        }
                    }
        }
    }
//签名
    signingConfigs {
        releaseConfig {
        }
    }
    lintOptions {

        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        //忽略错误，能从ide直接安装到手机就能打包
        abortOnError false
//        checkReleaseBuilds false
    }
}
